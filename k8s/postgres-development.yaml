apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: postgres
  template:
    metadata:
      labels:
        component: postgres
    spec:
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: database-persistent-volume-claim
      containers:
        - name: postgres
          image: postgres
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
              subPath: postgres
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: env
                  key: PG_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: env
                  key: PG_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: env
                  key: PG_DATABASE
        - name: init-db
          image: postgres
          env:
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: env
                key: PG_DATABASE
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: env
                key: PG_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: env
                key: PG_PASSWORD
          command:
            - sh
            - -c
            - |
              PGPASSWORD=$POSTGRES_PASSWORD psql -h postgres-cluster-ip-service -U $POSTGRES_USER -tc "SELECT 1 FROM pg_database WHERE datname = '$POSTGRES_DB';" | grep -q 1 || \
              PGPASSWORD=$POSTGRES_PASSWORD psql -h postgres-cluster-ip-service -U $POSTGRES_USER -c "CREATE DATABASE \"$POSTGRES_DB\";"